#!/bin/bash

################################################################################

source /etc/freedom-node/include/color

################################################################################

# home directory
HOME_DIR="$(cat /etc/freedom-node/homedir 2>/dev/null)"
# user
USER_NAME="$(cat /etc/freedom-node/user 2>/dev/null)"

################################################################################

# if loading block index
if [[ ! "$(tail -1 "$HOME_DIR"/.trumpcoin/debug.log 2>/dev/null | grep "Loading block index...")" ]] &>/dev/null; then
  # just quote
  RANDOM_INFO_QUOTE="2"
else
  RANDOM_INFO_QUOTE=$((((RANDOM % 2) + 1)))
fi

################################################################################
# random info and quotes
################################################################################

if [[ "$RANDOM_INFO_QUOTE" == "1" ]] &>/dev/null; then
  # random quotes/information start
  RANDOM_INFO=$((((RANDOM % 7) + 1)))
  # information - system - wallet
  if [ "$RANDOM_INFO" == "1" ] &>/dev/null; then
    TIMELINE="Value: $WALLET_VALUE USD ($FREED_PRICE)"
  elif [ "$RANDOM_INFO" == "2" ] &>/dev/null; then
    TIMELINE="Difficulty: $(grep "difficulty" "$HOME_DIR"/node/getinfo.tmp 2>/dev/null | awk '{ print $NF }' | tr -d ',')"
  elif [ "$RANDOM_INFO" == "3" ] &>/dev/null; then
    TIMELINE="Nodes: $(grep "total" "$HOME_DIR"/node/getpatriotnodecount.tmp | awk '{ print $NF }') IPv4: $(grep "ipv4" "$HOME_DIR"/node/getpatriotnodecount.tmp | awk '{ print $NF }') IPv6: $(grep "ipv6" "$HOME_DIR"/node/getpatriotnodecount.tmp | awk '{ print $NF }')"
  elif [ "$RANDOM_INFO" == "4" ] &>/dev/null; then
    LOWEST_INPUT="$(grep "amount" "$HOME_DIR"/node/listunspent.tmp 2>/dev/null | awk '{ print $NF }' | tr -d ',' | sort -n | head -1)"
    TIMELINE="Lowest input: $LOWEST_INPUT FREED"
  elif [ "$RANDOM_INFO" == "5" ] &>/dev/null; then
    HIGHEST_INPUT="$(grep "amount" "$HOME_DIR"/node/listunspent.tmp 2>/dev/null | awk '{ print $NF }' | tr -d ',' | sort -n | tail -1)"
    TIMELINE="Highest input: $HIGHEST_INPUT FREED"
  elif [ "$RANDOM_INFO" == "6" ] &>/dev/null; then
    AVERAGE_CONFIRMATIONS="$(cat "$HOME_DIR"/node/listunspent.tmp 2>/dev/null | grep "confirmations" | awk '{ print $2 }' | tr -d ',' | awk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }' | awk -F. '{ print $1 }')"
    TIMELINE="Average confirmations: $AVERAGE_CONFIRMATIONS"
  elif [ "$RANDOM_INFO" == "7" ] &>/dev/null; then
    AVERAGE_INPUT_SIZE="$(cat "$HOME_DIR"/node/listunspent.tmp 2>/dev/null | grep "amount" | awk '{ print $2 }' | tr -d ',' | awk '{ sum += $1; n++ } END { if (n > 0) print sum / n; }' | awk '{ printf "%.8f\n", $1 }')"
    TIMELINE="Average input size: $AVERAGE_INPUT_SIZE FREED"
  fi
fi

################################################################################
# random quotes
################################################################################

if [[ "$RANDOM_INFO_QUOTE" == "2" ]] &>/dev/null; then
  # random quotes/information start
  RANDOM_QUOTES=$((((RANDOM % 11) + 1)))
  # quotes - art of the deal, djt
  if [ "$RANDOM_QUOTES" == "1" ] &>/dev/null; then
    TIMELINE="${GR}Think big${N0:?}"
  elif [ "$RANDOM_QUOTES" == "2" ] &>/dev/null; then
    TIMELINE="${GR}Maximize your options${N0:?}"
  elif [ "$RANDOM_QUOTES" == "3" ] &>/dev/null; then
    TIMELINE="${GR}Know your market${N0:?}"
  elif [ "$RANDOM_QUOTES" == "4" ] &>/dev/null; then
    TIMELINE="${GR}Use your leverage${N0:?}"
  elif [ "$RANDOM_QUOTES" == "5" ] &>/dev/null; then
    TIMELINE="${GR}Enhance your location${N0:?}"
  elif [ "$RANDOM_QUOTES" == "6" ] &>/dev/null; then
    TIMELINE="${GR}Get the word out${N0:?}"
  elif [ "$RANDOM_QUOTES" == "7" ] &>/dev/null; then
    TIMELINE="${GR}Fight back${N0:?}"
  elif [ "$RANDOM_QUOTES" == "8" ] &>/dev/null; then
    TIMELINE="${GR}Deliver the goods${N0:?}"
  elif [ "$RANDOM_QUOTES" == "9" ] &>/dev/null; then
    TIMELINE="${GR}Contain the costs${N0:?}"
  elif [ "$RANDOM_QUOTES" == "10" ] &>/dev/null; then
    TIMELINE="${GR}Have fun${N0:?}"
  elif [ "$RANDOM_QUOTES" == "11" ] &>/dev/null; then
    TIMELINE="${GR}Fight! Fight! Fight!${N0:?}"
  fi
fi

# if zero
if [[ -z "$TIMELINE" ]] &>/dev/null; then
  TIMELINE="Always something.."
fi

################################################################################
# random quotes from quote database
################################################################################

# random quote age (seconds)
RANDOM_QUOTE_AGE="$(stat -c '%Y' /home/"$USER_NAME"/node/rq.tmp 2>/dev/null | while read lastedit; do echo "$(($(echo "$DATE") - $lastedit))"; done)"

# if missing, if older than n, less than n
if [[ ! -f /home/"$USER_NAME"/node/rq.tmp || "$RANDOM_QUOTE_AGE" -gt "$(echo "180+$(wc -l /home/"$USER_NAME"/node/quotes 2>/dev/null | awk '{ print $1 }')" | bc 2>/dev/null)" || "$(wc -l /home/"$USER_NAME"/node/rq.tmp | awk '{ print $1 }')" -lt "2" ]] &>/dev/null; then
  # fetch quotes with proxy from quotedb
  curl -s --proxy socks5h://localhost:9050 https://www.quotedb.com/quote/quote.php?action=random_quote_rss >/home/"$USER_NAME"/node/rq.tmp 2>/dev/null
fi

RANDOM_QUOTES="$(html2text /home/"$USER_NAME"/node/rq.tmp 2>/dev/null | egrep -v "www|Image" | sed '/^[[:space:]]*$/d' | paste -sd' ')"
RANDOM_AUTHOR="$(html2text /home/"$USER_NAME"/node/rq.tmp 2>/dev/null | grep "authors" | tr '/' ' ' | awk -Fauthors '{ print $2 }' | xargs)"

# create quotes
echo "$RANDOM_QUOTES --$RANDOM_AUTHOR" >>/home/"$USER_NAME"/node/quotes
# disregard duplicates, sort randomly, disregard lines greater than n, html loc, errors
echo "$(tail -777 /home/"$USER_NAME"/node/quotes 2>/dev/null | awk 'length($0)<171' | awk '!a[$0]++' | sort -R | egrep -v ";|<|>|{|}|502 Bad Gateway|error code: 524|error code: 504")" >/home/"$USER_NAME"/node/quotes

# if found
if [[ -f /home/"$USER_NAME"/node/quotes.banned ]] &>/dev/null; then
  # banned quotes by authors
  echo "$(sort /home/"$USER_NAME"/node/quotes | grep -v "$(awk NF /home/"$USER_NAME"/node/quotes.banned)")" >/home/"$USER_NAME"/node/quotes
fi

# END
